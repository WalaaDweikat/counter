{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","items","counters","count","id","disabled","color","inc","setState","i","length","c","dec","reset","document","querySelectorAll","forEach","item","style","backgroundColor","borderColor","className","icon","faShoppingCart","this","onClick","faSync","faPlusCircle","faMinusCircle","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b3d593d.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./App.css\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    items: 0,\n    counters: [\n      { count: 0, id: \"c1\", disabled: 1, color: \"#ffc109\" },\n      { count: 0, id: \"c2\", disabled: 1, color: \"#ffc109\" },\n      { count: 0, id: \"c3\", disabled: 1, color: \"#ffc109\" },\n    ],\n  };\n\n  inc = (id) => {\n    this.setState(({ counters }) => {\n      for (let i = 0; i < counters.length; i++) {\n        if (id === counters[i].id) {\n          let c = counters;\n          c[i].count += 1;\n          return { counters: c };\n        }\n      }\n    });\n\n    this.setState(({ items, counters }) => {\n      let count = 0;\n      let c = counters;\n      for (let i = 0; i < counters.length; i++) {\n        if (counters[i].count === 0) count++;\n        if (counters[i].count === 0) {\n          c[i].disabled = 1;\n          c[i].color = \"#ffc109\";\n        } else {\n          c[i].disabled = null;\n          c[i].color = \"#0967ff\";\n        }\n      }\n      return { items: counters.length - count, counters: c };\n    });\n  };\n  dec = (id) => {\n    this.setState(({ counters }) => {\n      for (let i = 0; i < counters.length; i++) {\n        if (id === counters[i].id && counters[i].count !== 0) {\n          let c = counters;\n          c[i].count -= 1;\n          return { counters: c };\n        }\n      }\n    });\n    this.setState(({ items, counters }) => {\n      let count = 0;\n      let c = counters;\n      for (let i = 0; i < counters.length; i++) {\n        if (counters[i].count === 0) count++;\n        if (counters[i].count === 0) {\n          c[i].disabled = 1;\n          c[i].color = \"#ffc109\";\n        } else {\n          c[i].disabled = null;\n          c[i].color = \"#0967ff\";\n        }\n      }\n      return { items: counters.length - count, counters: c };\n    });\n  };\n  reset = () => {\n    this.setState(({ counters, items }) => {\n      let c = counters;\n      for (let i = 0; i < c.length; i++) {\n        c[i].count = 0;\n        c[i].color = \"#ffc109\";\n      }\n      return { counters: c, items: 0 };\n    });\n  };\n  render() {\n    let s = document.querySelectorAll(\".countNum\");\n    s.forEach((item, i) => {\n      item.style.backgroundColor = this.state.counters[i].color;\n      item.style.borderColor = this.state.counters[i].color;\n    });\n    // ).style.backgroundColor = this.state.counters[0].color;\n    return (\n      <>\n        <div className=\"header\">\n          <FontAwesomeIcon icon={faShoppingCart} className=\"icon\" />\n          <span id=\"items\">{this.state.items}</span>items\n        </div>\n        <div className=\"counters\">\n          <button className=\"refresh\" onClick={this.reset}>\n            <FontAwesomeIcon icon={faSync} className=\"syncIcon\" />\n          </button>\n          <div className=\"first_counter c\">\n            <div className=\"a\">\n              <span className=\"countNum\">\n                {this.state.counters[0].count === 0\n                  ? \"zero\"\n                  : this.state.counters[0].count}\n              </span>\n            </div>\n            <button className=\"inc\" onClick={() => this.inc(\"c1\")}>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"syncIcon\" />\n            </button>\n            <button\n              className=\"dec\"\n              onClick={() => this.dec(\"c1\")}\n              disabled={this.state.counters[0].disabled}\n            >\n              <FontAwesomeIcon icon={faMinusCircle} className=\"syncIcon\" />\n            </button>\n          </div>\n          <div className=\"second_counter c\">\n            <div className=\"a\">\n              <span className=\"countNum\">\n                {this.state.counters[1].count === 0\n                  ? \"zero\"\n                  : this.state.counters[1].count}\n              </span>\n            </div>\n            <button className=\"inc\" onClick={() => this.inc(\"c2\")}>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"syncIcon\" />\n            </button>\n            <button\n              className=\"dec\"\n              onClick={() => this.dec(\"c2\")}\n              disabled={this.state.counters[1].disabled}\n            >\n              <FontAwesomeIcon icon={faMinusCircle} className=\"syncIcon\" />\n            </button>\n          </div>\n          <div className=\"third_counter c\">\n            <div className=\"a\">\n              <span className=\"countNum\">\n                {this.state.counters[2].count === 0\n                  ? \"zero\"\n                  : this.state.counters[2].count}\n              </span>\n            </div>\n            <button className=\"inc\" onClick={() => this.inc(\"c3\")}>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"syncIcon\" />\n            </button>\n            <button\n              className=\"dec\"\n              onClick={() => this.dec(\"c3\")}\n              disabled={this.state.counters[2].disabled}\n            >\n              <FontAwesomeIcon icon={faMinusCircle} className=\"syncIcon\" />\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}